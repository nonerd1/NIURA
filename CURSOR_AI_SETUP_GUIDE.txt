# NIURA Project Setup Guide for Cursor AI

## Overview
This guide provides step-by-step instructions for setting up the NIURA project from the provided zip file. Follow these instructions to help the user configure both the backend and frontend servers on their MacBook, allowing them to connect their iPhone app to the servers.

## Step 1: Extract the Zip File
```bash
# Create a directory for the project
mkdir -p ~/NIURA
cd ~/NIURA

# Extract the zip file (assuming it's in Downloads)
unzip ~/Downloads/NIURA.zip -d .

# Move files from the temp directory to the root
mv NIURA_temp/* .
rmdir NIURA_temp
```

## Step 2: Install Prerequisites
```bash
# Install Homebrew if not already installed
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# Install Python 3.11
brew install python@3.11

# Install Node.js and npm
brew install node

# Install Expo CLI globally
npm install -g expo-cli
```

## Step 3: Set Up Python Environment
```bash
# Create and activate a virtual environment
python3.11 -m venv venv
source venv/bin/activate

# Install backend dependencies
cd niura-backend
pip install -r requirements.txt
cd ..
```

## Step 4: Install Node.js Dependencies
```bash
# Install frontend dependencies
npm install
```

## Step 5: Make Scripts Executable
```bash
# Make the wake-up script executable
chmod +x wake-up.sh

# Create an alias for easier usage
echo 'alias niura="$HOME/NIURA/wake-up.sh"' >> ~/.zshrc
source ~/.zshrc
```

## Step 6: Initialize the Database
```bash
# Set up the SQLite database
cd niura-backend
python setup_db.py
cd ..
```

## Step 7: Start the Servers
Explain to the user that they have two options:

Option 1: Use the wake-up script
```bash
# Use the niura alias
niura wake up
```

Option 2: Start servers manually
```bash
# Start the backend server
cd niura-backend
source ../venv/bin/activate
uvicorn app.main:app --reload --host 0.0.0.0 --port 8001

# In a new terminal, start the frontend server
cd ~/NIURA
npx expo start --tunnel
```

## Step 8: Connect the iPhone App
Instruct the user to:
1. Open the NIURA app on their iPhone
2. The app will automatically connect to the backend server through the Expo tunnel
3. They can now use all features of the app, including registration, login, and data tracking

## Troubleshooting
If the user encounters issues:

1. Network Connection Issues:
```bash
# Verify that both devices are on the same network
ifconfig | grep "inet " | grep -v 127.0.0.1
# Have the user check their phone is on the same network
```

2. Server Start Failures:
```bash
# Kill any existing processes
pkill -f "node|uvicorn"

# Try starting the servers again with the wake-up script
niura wake up
```

3. Package Installation Issues:
```bash
# Update pip
pip install --upgrade pip

# Try reinstalling the requirements
pip install -r requirements.txt --force-reinstall
```

4. Expo Connection Issues:
```bash
# Clear Expo cache
npx expo start -c --tunnel
```

## Note on IP Address Configuration
Explain that the wake-up.sh script automatically detects the current IP address and updates the API configuration, so the app should work across different networks. If there are connection issues, the API URL in src/services/api.ts may need to be manually updated. 