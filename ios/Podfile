require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# Core configuration
ENV['RCT_NEW_ARCH_ENABLED'] = '1'
ENV['USE_HERMES'] = '1'
ENV['USE_FABRIC'] = '0'
ENV['RCT_VERBOSE_LOGGING'] = '1'
ENV['CI'] = '1'

# Build optimizations
ENV['RCT_ENABLE_FAST_REFRESH'] = '1'
ENV['SWIFT_COMPILATION_MODE'] = 'singlefile'
ENV['CC'] = 'clang'
ENV['CXX'] = 'clang++'

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'NIURA' do
  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,
    :fabric_enabled => false,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Build optimizations
        config.build_settings['GCC_OPTIMIZATION_LEVEL'] = '2'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'singlefile'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = ''
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # Increase build parallelism
        config.build_settings['SWIFT_THREADS'] = '4'
        
        if target.name == "ReactCodegen"
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
          # Make script phases non-failing but keep output
          target.build_phases.each do |phase|
            if phase.respond_to?(:name) && phase.name.include?("Script")
              phase.shell_script = "set -x\n#{phase.shell_script}\ntrue"
            end
          end
        end

        # Fix SQLite source path
        if target.name == "ExpoSQLite"
          config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(PODS_ROOT)/../node_modules/expo-sqlite/ios']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', 'SQLITE_HAS_CODEC=1']
        end
      end
    end
  end
end
