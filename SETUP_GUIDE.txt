NIURA App Setup Guide - Complete Installation Instructions
================================================================

PREREQUISITES:
- Mac computer (macOS 12.0 or later recommended)
- iPhone (iOS 13.0 or later)
- Xcode installed from Mac App Store
- Node.js installed (version 16 or later)
- Git installed

STEP 1: CLONE THE PROJECT
-------------------------
1. Open Terminal on Mac
2. Navigate to desired directory: cd ~/Desktop (or wherever you want the project)
3. Clone the repository: git clone [YOUR_GITHUB_REPO_URL]
4. Navigate into project: cd NIURA

STEP 2: INSTALL DEPENDENCIES
-----------------------------
1. Install Node.js dependencies:
   npm install

2. Install iOS dependencies (CocoaPods):
   cd ios
   pod install
   cd ..

3. Install Expo CLI globally (if not already installed):
   npm install -g @expo/cli

STEP 3: CONFIGURE EXPO AND DEVELOPMENT BUILD
--------------------------------------------
1. Create Expo account at https://expo.dev (if you don't have one)
2. Login to Expo CLI: npx expo login
3. Install Expo Go app on your iPhone from App Store

STEP 4: INSTALL APP ON iPhone (REQUIRED FOR FULL FUNCTIONALITY)
-------------------------------------------------------------
**IMPORTANT: This app requires Xcode installation for full functionality due to native Bluetooth and other features.**

REQUIRED APPROACH - XCODE DEVELOPMENT BUILD:
1. Open the project in Xcode: open ios/NIURA.xcworkspace
2. Connect your iPhone to your Mac via USB
3. Select your iPhone as the target device in Xcode
4. Build and run the app (Cmd+R or click the play button)
5. The app will install as a native app on your iPhone
6. You may need to trust the developer certificate in iPhone Settings > General > VPN & Device Management

STEP 5: START DEVELOPMENT SERVER FOR HOT RELOADING
--------------------------------------------------
After installing via Xcode:
- Run: npx expo start --dev-client
- The installed app will automatically connect to the development server
- Code changes will appear via hot reload on your iPhone

ALTERNATIVE (LIMITED FUNCTIONALITY) - EXPO GO:
If you just want to see the UI without full features:
- Install Expo Go app from App Store
- Run: npx expo start
- Scan QR code with Expo Go
- Note: Bluetooth and some other features won't work properly

STEP 6: ALTERNATIVE - iOS SIMULATOR
---------------------------------------------
If you want to use iOS Simulator instead of physical device:
1. Open Xcode
2. Go to Xcode > Open Developer Tool > Simulator
3. In terminal with expo running, press 'i' to open in iOS simulator

STEP 7: TROUBLESHOOTING COMMON ISSUES
-------------------------------------
1. If you get build errors:
   - Clear Metro cache: npx expo start --clear
   - Clear node modules: rm -rf node_modules && npm install
   - Clear iOS build: cd ios && rm -rf build && cd ..

2. If TypeScript errors:
   - Run type check: npx tsc --noEmit
   - Check tsconfig.json configuration

3. If native module issues:
   - Reinstall pods: cd ios && pod install --repo-update && cd ..
   - Clean Xcode build folder: In Xcode, Product > Clean Build Folder

4. If Expo Go doesn't work:
   - Make sure iPhone and Mac are on same WiFi network
   - Try using tunnel connection: npx expo start --tunnel

STEP 8: FEATURES THAT SHOULD WORK
---------------------------------
✅ HomeScreen with metrics display (Focus, Stress, Mental Readiness)
✅ Real-time metrics with speedometer gauges
✅ Today's metrics chart (clickable to detailed view)
✅ Best focus time recommendations
✅ Music recommendations
✅ Current goals with progress bars
✅ Mental readiness history chart
✅ Bluetooth connection interface
✅ Navigation between screens
✅ Detailed metrics screen
✅ Profile and options screens

STEP 9: KNOWN LIMITATIONS
-------------------------
- SQLite database is disabled (app uses mock data)
- Bluetooth functionality has specific requirements for connection:
  * Only connects to devices named exactly "ESP32_EEG"
  * Requires specific service UUID: 4fafc201-1fb5-459e-8fcc-c5c9c331914b
  * Expects data in specific format: "stress,anxiety" as comma-separated values
  * Hardcoded for a particular ESP32 EEG device configuration
  * May not work with generic BLE devices or differently configured ESP32s
- Some features use simulated data for demonstration

STEP 10: PROJECT STRUCTURE
-------------------------
src/
├── components/          # Reusable UI components
├── screens/            # App screens
├── services/           # Database, auth, and other services
├── context/            # React context providers
├── theme/              # Colors and styling
├── utils/              # Utility functions
└── navigation/         # Navigation configuration

IMPORTANT NOTES:
- The app is designed for iPhone (portrait orientation)
- Uses Expo managed workflow with some native dependencies
- Requires iOS 13.0+ for full functionality
- Development build recommended for full feature access

If you encounter any issues, check:
1. Node.js version compatibility
2. Xcode version (latest recommended)
3. iOS version on device
4. Network connectivity between Mac and iPhone 